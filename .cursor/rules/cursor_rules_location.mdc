---
description: Enforces the location and naming conventions for all ST-Script cursor rule files
globs: "**/*.mdc"
alwaysApply: false
---
---
name: cursor_rules_location
description: Enforces the location and naming conventions for all ST-Script cursor rule files
version: 1.0.0
author: System
date: 2024-03-20
globs:
  - "**/*.mdc"
tags:
  - rules
  - organization
  - structure
---

# Cursor Rules Location
# Enforces the location and naming conventions for all ST-Script cursor rule files

<rule>
name: cursor_rules_location
description: Standards for placing ST-Script Cursor rule files in the correct directory
filters:
  - type: file_extension
    pattern: "\\.mdc$"
  - type: content
    pattern: "(?s)<rule>.*?</rule>"
  - type: event
    pattern: "file_create"
actions:
  - type: reject
    conditions:
      - pattern: "^(?!\\.\\/\\.cursor\\/rules\\/.*\\.mdc$)"
        message: "Cursor rule files (.mdc) must be placed in the .cursor/rules directory"
  - type: suggest
    message: |
      When creating ST-Script Cursor rules:

      1. Always place rule files in PROJECT_ROOT/.cursor/rules/:
         ```
         .cursor/rules/
         ├── st-script-syntax.mdc
         ├── st-script-cursorrules-prompt.mdc
         └── ...
         ```

      2. Follow the naming convention:
         - Use kebab-case for filenames (e.g., st-script-syntax.mdc)
         - Always use the .mdc extension
         - Prefix ST-Script related rules with 'st-script-'
         - Make names descriptive of the rule's purpose

      3. Organize rules into subdirectories if needed:
         ```
         .cursor/rules/
         ├── st-script/
         │   ├── syntax.mdc
         │   ├── formatting.mdc
         │   └── quick-replies.mdc
         ├── development/
         │   └── workflow.mdc
         └── ...
         ```

      4. Never place rule files:
         - In the project root
         - In subdirectories outside .cursor/rules (or its subdirectories)
         - In any other location

      5. File Creation Best Practices:
         - Due to potential issues with direct file creation, use the following printf approach:
           ```bash
           printf '%s\n' '---' 'name: st_script_rule_name' 'description: Your description' 'version: 1.0.0' 'author: Your Name' "date: $(date '+%Y-%m-%d')" 'globs: ["**/*.st", "**/*.stscript"]' 'tags:' '  - st-script' '  - your-tag' '---' '# Your Rule Title' '' '<rule>' 'name: your_rule_name' '...' '</rule>' > .cursor/rules/st-script-rule-name.mdc
           ```
         - This ensures proper YAML frontmatter and content formatting
         - Avoid using echo with heredoc as it may cause formatting issues
         - Always verify the file content after creation using `cat`

      ## File Creation Troubleshooting

      When creating ST-Script rule files, follow these steps:

      1. **Two-Step Creation Process**
         ```bash
         # Step 1: Create file with basic structure
         printf '%s\n' '---' 'name: st_script_rule' 'description: ST-Script rule description' 'version: 1.0.0' 'author: Author Name' "date: $(date '+%Y-%m-%d')" 'globs:' '  - "**/*.st"' '  - "**/*.stscript"' 'tags:' '  - st-script' '  - syntax' '---' > .cursor/rules/st-script-rule.mdc

         # Step 2: Append rule content
         cat << 'EOF' >> .cursor/rules/st-script-rule.mdc

         # ST-Script Rule Title

         <rule>
         name: st_script_rule
         description: Detailed description
         filters:
           - type: file_extension
             pattern: "\\.(st|stscript)$"
         actions:
           - type: suggest
             message: |
               Your message here
         </rule>
         EOF
         ```

      2. **Content Verification**
         ```bash
         # After creating file, always verify:
         cat .cursor/rules/st-script-rule.mdc
         
         # Check YAML frontmatter
         head -n 10 .cursor/rules/st-script-rule.mdc
         
         # Verify rule tags
         grep -A 1 -B 1 '<rule>' .cursor/rules/st-script-rule.mdc
         grep -A 1 -B 1 '</rule>' .cursor/rules/st-script-rule.mdc
         ```

      3. **Common Issues and Solutions**

         a. **YAML Frontmatter Issues**
            - Always include empty lines after `---`
            - Use consistent indentation (2 spaces)
            - Verify no trailing spaces
            ```yaml
            ---
            name: st_script_rule
            description: Description
            ---

            # Content starts here
            ```

         b. **Rule Tag Issues**
            - Ensure proper spacing around tags
            - Keep tags on their own lines
            ```
            <rule>
            name: st_script_rule
            ...
            </rule>
            ```

         c. **Content Formatting**
            - Use `|` for multiline strings in YAML
            - Preserve indentation in code blocks
            - Use consistent line endings

      4. **Recovery Steps**
         If a file becomes corrupted:
         ```bash
         # Backup existing file
         cp .cursor/rules/st-script-rule.mdc .cursor/rules/st-script-rule.mdc.bak
         
         # Create new file with correct structure
         printf '%s\n' '---' 'name: st_script_rule' ... > .cursor/rules/st-script-rule.mdc
         
         # Copy content from backup, fixing formatting
         sed -n '/^# ST-Script/,$p' .cursor/rules/st-script-rule.mdc.bak >> .cursor/rules/st-script-rule.mdc
         ```

      Remember:
      - Always create files in `.cursor/rules/`
      - Use consistent ST-Script naming conventions
      - Verify file content after creation
      - Keep backups of important rules
      - Test rule files before committing

examples:
  - input: |
      # Bad: Rule file in wrong location
      rules/st-script-syntax.mdc
      st-script-syntax.mdc
      .rules/st-script-syntax.mdc

      # Good: Rule file in correct location
      .cursor/rules/st-script-syntax.mdc
      .cursor/rules/st-script/syntax.mdc
    output: |
      Correctly placed ST-Script cursor rule file

metadata:
  priority: critical
  version: 1.0
  tags:
    - rules
    - organization
    - st-script
    - structure
</rule> 