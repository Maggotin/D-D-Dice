---
description: Comprehensive guide for SillyTavern scripting (STScript) syntax highlighting
globs: 
alwaysApply: false
---
# SillyTavern STScript Syntax

This document provides syntax highlighting rules and documentation for STScript, the scripting language used in SillyTavern.

## TextMate Grammar for Syntax Highlighting

```json
{
    "fileTypes": [
        "st",
        "stscript",
        "json"
    ],
    "name": "STScript",
    "scopeName": "source.stscript",
    "patterns": [
        {
            "match": "//.*$",
            "name": "comment.line.double-slash"
        },
        {
            "begin": "/\\*",
            "end": "\\*/",
            "name": "comment.block"
        },
        {
            "match": "/(\\w+)\\b",
            "name": "keyword.other.command"
        },
        {
            "match": "\\b(if|else|return|let|var)\\b",
            "name": "keyword.control"
        },
        {
            "match": "\\{\\{([^}]+)\\}\\}",
            "name": "variable.other"
        },
        {
            "match": "(\\w+)=",
            "name": "variable.parameter"
        },
        {
            "match": "\\b(eq|neq|lt|gt|lte|gte|not|in|nin)\\b",
            "name": "keyword.operator.comparison"
        },
        {
            "match": "\\|\\|",
            "name": "keyword.operator.pipe"
        },
        {
            "match": "\\{:\\s*",
            "name": "punctuation.section.block.begin"
        },
        {
            "match": "\\s*:\\}",
            "name": "punctuation.section.block.end"
        },
        {
            "match": "\"(version|name|disableSend|placeBeforeInput|injectInput|color|onlyBorderColor|qrList|idIndex)\"\\s*:",
            "name": "support.type.property-name"
        },
        {
            "match": "\"(id|showLabel|label|title|message|contextList|preventAutoExecute|isHidden|executeOnStartup|executeOnUser|executeOnAi|executeOnChatChange|executeOnGroupMemberDraft|executeOnNewChat|automationId)\"\\s*:",
            "name": "support.type.property-name"
        },
        {
            "match": "\\b(await|async|true|false|null)\\b",
            "name": "constant.language"
        },
        {
            "match": "\\b(\\d+(\\.\\d+)?)\\b",
            "name": "constant.numeric"
        },
        {
            "match": "\\b(picker|inputhistory-config|key|get|inputhistory-add|lalib|expression|test|left|rule|right|and|or|not|pop|push|unshift|foreach|map|aslist|whilee|reduce|initial|groupby|sorte|flatten|depth|filter|find|index|last|slice|start|end|length|splice|delete|insert|shuffle|pick|items|list|reverse|dict|var|globalvar|keys|split|trim|join|glue|pad-start|fill|pad-end|pad-both|diff|all|buttons|stripcode|notes|json-pretty|substitute|wordcount|language|sentencecount|segment|granularity|continue|go|rename-char|sysgen|ask|delname|send|trigger|hide|unhide|member-get|field|member-disable|member-enable|member-add|member-remove|member-up|member-down|member-peek|delswipe|echo|timeout|extendedTimeout|preventDuplicates|awaitDismissal|cssClass|escapeHtml|onClick|gen|as|genraw|addswipe|abort|fuzzy|threshold|mode|pass|delay|input|run|messages|setinput|popup|large|wide|okButton|cancelButton|result|trimtokens|trimstart|trimend|inject|role|listinjects|format|flushinject|tokens|getpromptentry|setpromptentry|pick-icon|data-bank-add|data-bank-update|data-bank-disable|data-bank-enable|data-bank-delete|sprite|spriteoverride|expressions|sg|lg|img|sd-source|img-source|sd-style|img-style|icw|st|ih-config|getswipe|wiz-page-before|wiz-page-after|wiz-page-transition|wiz-page-hero|wiz-page-hero-text|wiz-page-nav|wiz-page-crumbs|setwizvar|extension-installed|persona|sync|delmode|resetui|stopping-strings|custom-stopping-strings|custom-stop-strings|get-reasoning|set-reasoning|parse-reasoning|help|findchar|nar|sys|story|single|bubbles|bubble|cont|getmember|memberget|disable|disablemember|memberdisable|enable|enablemember|memberenable|addmember|memberadd|removemember|memberremove|upmember|memberup|downmember|memberdown|peek|memberpeek|peekmember|swipedel|swipeadd|wait|sleep|exec|flushinjects|getpromptentries|setpromptentries|server|uppercase|to-upper|lowercase|to-lower|substring|system-prompt|sysprompt|sysprompt-enable|sysprompt-on|sysprompt-disable|sysprompt-off|sysprompt-toggle|sysprompt-state|tool-list|tools-list|tool-invoke|tools-invoke|tool-register|tools-register|tool-unregister|tools-unregister|listchatvar|listvar|setchatvar|setvar|getchatvar|getvar|addchatvar|addvar|incchatvar|incvar|decchatvar|decvar|flushchatvar|flushvar|getpersonalore|getpersonabook|getpersonawi|getcharlore|findentry|getcharwi|getlorefield|getentryfield|getwifield|createlore|createentry|createwi|setlorefield|setentryfield|setwifield|r|roll|quick-reply-manager|qrm|qr-manager|luascript|lua-script)\\b",
            "name": "support.function"
        },
        {
            "match": "\\b(compact|milliseconds|args|text|start|end|limit|quiet|source|name|url|character|expression|forceGet|return|await|field|content|file|json|script|scriptId|data)=",
            "name": "variable.parameter.named-argument"
        },
        {
            "name": "string.quoted.double",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape",
                    "match": "\\\\."
                }
            ]
        },
        {
            "name": "string.quoted.single",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape",
                    "match": "\\\\."
                }
            ]
        }
    ]
}
```

## STScript Basics

STScript is SillyTavern's scripting language used for creating quick replies, automations, and custom functionality.

### Script Structure

```stscript
/command arg1 arg2 param1=value1 param2=value2
```

### Basic Commands

```stscript
// Send a message
/send Hello world!

// Echo text to the user
/echo This is a message

// Generate AI response
/gen

// Set input field
/setinput This text will appear in the input field

// Show a popup
/popup title="Information" message="This is important"

// Wait for a specified time
/sleep milliseconds=1000
```

## Variables and Control Flow

### Variables

```stscript
// Set a variable
/var myVar=Hello
/setvar myVar=Hello

// Get a variable value
/var result=/getvar myVar

// Use variables in text
I have {{myVar}} to say.
```

### Conditional Logic

```stscript
/if {{condition}} {: 
    // Commands to execute if condition is true
:} else {: 
    // Commands to execute if condition is false
:}
```

### Comparison Operators

- `eq` - Equal to
- `neq` - Not equal to
- `lt` - Less than
- `gt` - Greater than
- `lte` - Less than or equal to
- `gte` - Greater than or equal to
- `in` - Contains
- `nin` - Does not contain

```stscript
/if {{value}} eq 10 {: 
    /echo Value is 10
:}
```

## Quick Reply Format

Quick replies are stored in JSON format:

```json
{
  "version": 2,
  "name": "My Quick Replies",
  "disableSend": false,
  "placeBeforeInput": false,
  "injectInput": false,
  "qrList": [
    {
      "id": "unique_id",
      "label": "Button Label",
      "title": "Tooltip Text",
      "message": "/echo This is a quick reply"
    }
  ]
}
```

## Advanced Features

### Function Calling Integration

```stscript
// List available tools
/tool-list

// Invoke a tool
/tool-invoke name="ToolName" param1="value1" param2="value2"
```

### Character and Chat Management

```stscript
// Find a character
/findchar name="Character Name"

// Get character information
/getcharwi

// Add a swipe
/addswipe text="Alternative response"
```

### Dice Rolling (with D&D Dice Extension)

```stscript
// Roll dice
/roll 2d6+3

// Roll with character name
/tool-invoke name="RollTheDice" who="Character" formula="1d20+5"
```

## Best Practices

1. Use comments to document your scripts
2. Organize complex scripts into logical sections
3. Test scripts thoroughly before deployment
4. Use variables to store reusable values
5. Handle errors gracefully with conditional logic
6. Document your quick replies for other users 